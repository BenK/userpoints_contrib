<?php
// $Id: userpoints_retroactive.module,v 1.3 2007-06-29 22:14:38 kbahey Exp $

// Based on a script by Miguel Figueiredo <elmig@debianpt.org>, 2006

function userpoints_retroactive_help($section) {
  switch ($section) {
    case 'admin/settings/userpoints/retroactive':
      $output = t('Calculate userpoints for nodes and comments created in the past.');
      break;
  }
  return $output;
}

function userpoints_retroactive_menu($may_cache) {
  $items = array();

  $items[] = array(
    'path'     => 'admin/settings/userpoints/retroactive',
    'callback' => 'userpoints_retroactive_page',
    'title'    => t('Retroactive'),
    'access'   => user_access(USERPOINTS_PERM_ADMIN),
    'type'     => MENU_NORMAL_ITEM);

   return $items;
}

function userpoints_retroactive_page() {
  return drupal_get_form('userpoints_retroactive', $form);
}

function userpoints_retroactive() {
  $form = array();

  $form['confirm'] = array(
    '#type' => 'textfield',
    '#title' => t('Give users points for nodes and comments they created in the past. Enter YES to reset'),
    '#size' => 3,
    '#maxlength' => 3,
    '#default_value' => t('NO'));

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'));

  return $form;
}

function userpoints_retroactive_submit($form_id, $edit) {
  if ($edit['confirm'] == t('YES')) {
    userpoints_retroactive_do();
    drupal_set_message(t('Points awarded for past nodes and comments.'));
  }
}

function userpoints_retroactive_do() {
  userpoints_retroactive_initalize();
  userpoints_retroactive_nodes();
  userpoints_retroactive_comments();
  drupal_set_message(t('User points updated with node and comment values'));
  drupal_goto('admin/settings/userpoints');
}

function userpoints_retroactive_initalize() {
  $u_result = db_query('SELECT uid FROM {users} WHERE uid > 0');
  while ($user = db_fetch_object($u_result)) {
    db_query('INSERT INTO {userpoints} (uid, last_update, points, max_points) VALUES (%d, %d, 0, 0)', $user->uid, time());
  }
}

function userpoints_retroactive_nodes() {
	$n_result = db_query("SELECT uid, type, COUNT(uid) AS val FROM {node} WHERE uid > 0 GROUP BY uid, type");
	while($node = db_fetch_object($n_result)) {
    $weight = variable_get(USERPOINTS_POST . $node->type, 0);
		db_query('UPDATE {userpoints} SET points = points + %d WHERE uid = %d', ($node->val * $weight), $node->uid);
	}
}

function userpoints_retroactive_comments() {
  $weight = variable_get(USERPOINTS_POST_COMMENT, 0);
	$c_result = db_query('SELECT uid, COUNT(uid) AS val FROM {comments} WHERE uid > 0 GROUP BY uid');
	while($comment = db_fetch_object($c_result)) {
		db_query('UPDATE {userpoints} SET points = points + %d WHERE uid = %d', ($comment->val * $weight), $comment->uid);
	}
}
