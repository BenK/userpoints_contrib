<?php

//$Id: userpoints_invite.module,v 1.5 2007-06-29 22:14:38 kbahey Exp $

// Copyright 2005-2007 Khalid Baheyeldin http://2bits.com

define('USERPOINTS_INVITE_INVITE',                     'userpoints_invite_invite');
define('USERPOINTS_INVITE_REGISTER_INVITER',           'userpoints_invite_register_inviter');
define('USERPOINTS_INVITE_REGISTER_INVITEE',           'userpoints_invite_register_invitee');
define('USERPOINTS_INVITE_REGISTER_REMOVE_ON_DELETE',  'userpoints_invite_register_remove_on_delete');

function userpoints_invite_help($section) {
  switch ($section) {
    case 'admin/settings/userpoints_invite':
      $output = t('<strong>UP:</strong> A userpoints interface with the invite module.');
      break;
  }
  return $output;
}

function userpoints_invite_userpoints($op, $points = 0, $uid = 0, $event = '') {
  switch($op) {
    case 'setting':
      $group = 'invite';
      $form[$group] = array(
        '#type'        => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed'   => TRUE,
        '#title'       => t('!Points for invite (requires the invite module)', userpoints_translation()),
      );

      $form[$group][USERPOINTS_INVITE_INVITE] = array(
        '#type'          => 'textfield',
        '#title'         => t('!Points for inviting a user', userpoints_translation()),
        '#default_value' => variable_get(USERPOINTS_INVITE_INVITE, 0),
        '#size'          => 5,
        '#maxlength'     => 5,
      );

      $form[$group][USERPOINTS_INVITE_REGISTER_INVITER] = array(
        '#type'          => 'textfield',
        '#title'         => t('!Points awarded to inviter when invited user registers', userpoints_translation()),
        '#default_value' => variable_get(USERPOINTS_INVITE_REGISTER_INVITER, 0),
        '#size'          => 5,
        '#maxlength'     => 5,
      );

      $form[$group][USERPOINTS_INVITE_REGISTER_INVITEE] = array(
        '#type'          => 'textfield',
        '#title'         => t('!Points awarded to invitee when invited user registers', userpoints_translation()),
        '#default_value' => variable_get(USERPOINTS_INVITE_REGISTER_INVITEE, 0),
        '#size'          => 5,
        '#maxlength'     => 5,
      );

      $form[$group][USERPOINTS_INVITE_REGISTER_REMOVE_ON_DELETE] = array(
        '#type'          => 'checkbox',
        '#title'         => t('!Points issued to inviter to be removed when user is deleted?', userpoints_translation()),
        '#default_value' => variable_get(USERPOINTS_INVITE_REGISTER_REMOVE_ON_DELETE, 0),
      );


      return $form;
      break;
  }
}

function userpoints_invite($op, $args) {
  switch($op) {
    case 'invite':
      $points = variable_get(USERPOINTS_INVITE_INVITE, 0);
      userpoints_userpointsapi('points', $points, $args['inviter']->uid, 'invite '.$op);
      break;
    case 'cancel':
      $points = -variable_get(USERPOINTS_INVITE_INVITE, 0);
      userpoints_userpointsapi('points', $points, $args['inviter']->uid, 'invite '.$op);
      break;
    case 'escalate':
      $op = 'register';
      $points = variable_get(USERPOINTS_INVITE_REGISTER_INVITER, 0);
      userpoints_userpointsapi('points', $points, $args['inviter']->uid, 'invite '.$op. ' invited '.$args['invitee']->uid);
      $points = variable_get(USERPOINTS_INVITE_REGISTER_INVITEE, 0);
      userpoints_userpointsapi('points', $points, $args['invitee']->uid, 'invite '.$op. ' invited by '.$args['inviter']->uid);
      break;
  }
}

function userpoints_invite_user($op, &$edit, &$account, $category = NULL) {
  switch($op) {
    case 'delete':
      if (variable_get(USERPOINTS_INVITE_REGISTER_REMOVE_ON_DELETE, 0) == 1) {
        $result = db_query("SELECT uid FROM {userpoints_txn} WHERE event = '%s' ORDER BY time_stamp DESC LIMIT 1", 'invite register invited '.$account->uid);
        if (mysql_num_rows($result) > 0) {
          $uid = mysql_result($result, 0, 0);
          $points = -(variable_get(USERPOINTS_INVITE_INVITE, 0) + variable_get(USERPOINTS_INVITE_REGISTER_INVITER, 0));
          userpoints_userpointsapi('points', $points, $uid, 'invited user '.$account->uid.' deleted');
        }
      }
      break;
  }
}

